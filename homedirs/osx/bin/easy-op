#!/usr/bin/env bash

set -e
set -o pipefail

[[ -z "${DEBUG}" ]] || set -x

main() {
  case "$1" in
    status)
      auth_check
      ;;
    list)
      list
      ;;
    show)
      shift
      show_command "$@"
      ;;
    *)
      print_usage_and_exit
      ;;
  esac
}

print_usage_and_exit() {
  echo "
usage: $0 <command>

1password CLI without all the JSON parsing

Commands:
 - status
     checks if your terminal session has a valid token

 - list
     displays some stats of the whole dataset

 - show
     displays a credential (only works with secure notes)

     -n      specify note name (default: "")

     -f      specify field name (default: "")
"
  exit 1
}

auth_check() {
  if op list vaults > /dev/null 2>&1
  then
    echo "authenticated"; exit 0
  else
    echo "unauthenticated"; exit 1
  fi
}

show_command() {
  local note_name=""
  local field_name=""
  while getopts ":n:f:" opt; do
    case $opt in
      n) note_name="$OPTARG"
      ;;
      f) field_name="$OPTARG"
      ;;
      \?) print_usage_and_exit
      ;;
    esac
  done

  show "${note_name}" "${field_name}"
}

show() {
  local title="$1"
  local section="$2"

  if [[ -n "${section}" ]]; then
    op get item "${title}" \
       | jq -r ".details.sections[]
         | select(.fields)
         | .fields[]
         | select(.t == \"${section}\")
         | .v"
  else
    op get item "${title}" \
       | jq -r ".details"
  fi
}

list() {
  op list items | jq -r .[].overview.title | sort -f
}

main "$@"
