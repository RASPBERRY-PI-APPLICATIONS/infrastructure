#!/usr/bin/env bash

set -eu
set -o pipefail

[[ -z "${DEBUG:-}" ]] || set -x

main() {
  local secret_title
  local encoded_json
  secret_title="${1:-}"

  if [[ -z "${secret_title}" || "${secret_title}" = "-h" ]]; then
    print_usage_and_exit
  fi

  log_into_1password

  IFS='' read -r -d '' credential_json <<JSON ||
{
  "fields": [
    {
      "id": "disk encryption passphrase",
      "type": "concealed",
      "label": "disk encryption passphrase",
      "value": "$(xkcd-password-generator)"
    },
    {
      "id": "machine password",
      "type": "concealed",
      "label": "machine password",
      "value": "$(xkcd-password-generator 3)"
    },
    {
      "id": "notesPlain",
      "type": "STRING",
      "purpose": "NOTES",
      "label": "notesPlain",
      "value": "generated by \`create-machine-secrets\` \n\n

source: https://github.com/scottmuc/infrastructure/blob/main/homedirs/common/bin/create-machine-secrets
"
    }
  ]
}
JSON
  true

  op item create \
    --category="Secure Note" \
    --vault="Automation" \
    --title="${secret_title}" \
    --template=<(echo ${credential_json}) 2>/dev/null
}

print_usage_and_exit() {
  cat <<HELP
usage: $0 <name of credential>

Generates the following:

  - machine passphrase
  - disk encryption passphrase

The private key, and all the passphrases will be stored in a 1Password
"Secure Note" with the name provided.

HELP

  exit 1
}

log_into_1password() {
  eval $(op signin)
}

main "$@"
