#!/usr/bin/env bash

set -e
set -u

# from https://stackoverflow.com/a/246128
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

main() {
  symlink_all_the_things
  install_os_packages
  install_all_things_docker
  install_terraform
  install_1password_cli
  install_zsh_solarized
  default_to_zsh
  setup_neovim
}

install_all_things_docker() {
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  sudo add-apt-repository \
     "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
     $(lsb_release -cs) \
     stable"
  sudo apt-get update
  sudo apt-get install -y docker-ce docker-ce-cli containerd.io
  sudo service docker start
  sudo usermod -a -G docker wsl
}

install_terraform() {
  curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
  sudo apt-add-repository \
    "deb [arch=amd64] https://apt.releases.hashicorp.com \
    $(lsb_release -cs) \
    main"

  sudo apt-get update
  sudo apt-get install terraform
}

# depends on zsh being install of course
default_to_zsh() {
  if ! echo $SHELL | grep zsh > /dev/null; then
    chsh -s $(which zsh)
  fi
}

install_os_packages() {
  sudo apt-get update
  sudo apt-get install -y \
    autojump              \
    gnupg                 \
    jq                    \
    neovim                \
    unzip                 \
    zsh
}

# https://developer.1password.com/docs/cli/install-server
install_1password_cli() {
  if ! command -v op &> /dev/null; then
    curl -sSfo op.zip \
      https://cache.agilebits.com/dist/1P/op2/pkg/v2.0.0/op_linux_amd64_v2.0.0.zip \
      && sudo unzip -od /usr/local/bin/ op.zip \
      && rm op.zip
  fi
}


# https://github.com/joel-porquet/zsh-dircolors-solarized
install_zsh_solarized() {
  if [[ ! -d ~/.zsh/zsh-dircolors-solarized ]]; then
    git clone --recursive \
      https://github.com/joel-porquet/zsh-dircolors-solarized \
      ~/.zsh/zsh-dircolors-solarized
  fi

  if [[ ! -f ~/.zsh-dircolors.config ]]; then
    /usr/bin/zsh -c '. ~/.zsh/zsh-dircolors-solarized/zsh-dircolors-solarized.zsh || setupsolarized dircolors.ansi-light'
  fi
}

# I am getting the absolute path so that ls -la output goes from:
#
#   .config -> /Users/spring/workspace/infrastructure/homedirs/osx/bin/../dotfiles/dot.config
# to
#   .config -> /Users/spring/workspace/infrastructure/homedirs/osx/dotfiles/dot.config
symlink_all_the_things() {
  local homedir_source=$(cd "${DIR}/"; pwd)
  local common_source=$(cd "${DIR}/../common"; pwd)
  local dotfiles_dir="${homedir_source}/dotfiles"
  local common_dotfiles_dir="${common_source}/dotfiles"

  # I don't know how to do this command in a 1 line indempotent way. Repeated executions
  # but symlinks within the symlink.
  if [[ ! -d ~/.config ]]; then
    mkdir ~/.config
  fi

  if [[ ! -d ~/.gnupg ]]; then
    mkdir ~/.gnupg
    chmod 700 ~/.gnupg
  fi
  ln -sfv "${common_dotfiles_dir}/dot.gnupg/gpg-agent.conf" ~/.gnupg/gpg-agent.conf

  ln -sfv "${common_dotfiles_dir}/dot.githelpers" ~/.githelpers
  ln -sfv "${common_dotfiles_dir}/dot.tmux.conf" ~/.tmux.conf
  ln -sfv "${common_dotfiles_dir}/dot.gitconfig" ~/.gitconfig
  ln -sfv "${common_dotfiles_dir}/dot.mrconfig" ~/.mrconfig

  # https://unix.stackexchange.com/a/355220
  ln -sTfv "${common_dotfiles_dir}/dot.config/nvim" ~/.config/nvim

  ln -sfv "${dotfiles_dir}/dot.zshrc" ~/.zshrc
}


setup_neovim() {
  nvim -c "PlugInstall" -c "qall" --headless
  nvim -c "PlugUpdate" -c "qall" --headless
  nvim -c "UpdateRemotePlugins" -c "qall" --headless
}

main
